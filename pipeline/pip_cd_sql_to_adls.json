{
	"name": "pip_cd_sql_to_adls",
	"properties": {
		"activities": [
			{
				"name": "LastModified",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select isnull(last_Modified,'1900-01-01') as last_Modified\n from dbo.watermark where table_name = \n '@{pipeline().parameters.table_name_par}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference",
						"parameters": {
							"ds_name_table": {
								"value": "@pipeline().parameters.table_name_par",
								"type": "Expression"
							},
							"ds_schema_table": {
								"value": "@pipeline().parameters.schema_par",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "MaxDateModified",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT max(ModifiedDate) as ModifiedDate\nÂ  FROM @{pipeline().parameters.schema_par}.\n@{pipeline().parameters.table_name_par}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference",
						"parameters": {
							"ds_name_table": {
								"value": "@pipeline().parameters.table_name_par",
								"type": "Expression"
							},
							"ds_schema_table": {
								"value": "@pipeline().parameters.schema_par",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "LastModified",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "MaxDateModified",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('LastModified').output.firstRow.Last_Modified,activity('MaxDateModified').output.firstRow.ModifiedDate)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Copy data2",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{pipeline().parameters.schema_par}.@{pipeline().parameters.table_name_par} where ModifiedDate > '@{variables('last_Modified')}'and ModifiedDate <= '@{variables('max_valor_escrito')}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable",
									"type": "DatasetReference",
									"parameters": {
										"ds_name_table": "Product",
										"ds_schema_table": "salesLT"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Parquet",
									"type": "DatasetReference",
									"parameters": {
										"ds_container": {
											"value": "@pipeline().parameters.container_par",
											"type": "Expression"
										},
										"ds_directory": {
											"value": "@pipeline().parameters.directory_par",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update_watermark",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copy data2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": {
											"value": "update dbo.watermark set last_Modified = '@{activity('MaxDateModified').output.firstRow.ModifiedDate}'\nwhere table_name = '@{pipeline().parameters.table_name_par}'",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Web1",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://prod-20.westus2.logic.azure.com:443/workflows/7f650136cac14c1fb39dacacb8d9f50c/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=ePt1J5kQuoIDzMDm1SYdtvClJ2wKVjt7LIwaiQtUFz4",
								"method": "POST",
								"body": {
									"value": "{\"RUN_ID\":\"@{pipeline().RunId}\",\n\"TABLE_NAME\":\"@{pipeline().parameters.table_name_par}\",\n\"TIMESTAMP\":\"@{utcnow()}\",\n\"ERRODESCRIPTION\":\"NAO EXISTE NOVOS REGISTROS PARA ESTA TABELA\",\n\"TO\":\"manfriniti@gmail.com\",\n\"SUBJECT\":\"INGESTAO DIARIA\"}\n\n",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"schema_par": {
				"type": "string",
				"defaultValue": "salesLT"
			},
			"table_name_par": {
				"type": "string",
				"defaultValue": "Product"
			},
			"container_par": {
				"type": "string",
				"defaultValue": "landing"
			},
			"directory_par": {
				"type": "string",
				"defaultValue": "adventureworks/Product/parquet"
			}
		},
		"variables": {
			"last_Modified": {
				"type": "String"
			},
			"max_valor_escrito": {
				"type": "String"
			}
		},
		"annotations": []
	}
}